三、选题报告
1.所选课题的题目及课题来源
课题题目：OLT中二层表项学习同步系统的设计与优化 
optical line terminal(光线路终端）
在PON（Passive Optical Network：无源光纤网络）技术应用中，OLT设备是重要的局端设备，它实现的功能是：
1、与前端（汇聚层）交换机用网线相连，转化成光信号，用单根光纤与用户端的分光器互联。
2、实现对用户端设备ONU的控制、管理、测距等功能。
3、OLT设备和ONU设备一样，也是光电一体的设备。
PON网络由OLT、ODN（基于PON设备的FTTH光缆网络）和ONU(光网络单元)三部分组成。
本文所涉及的二层为物理层＋数据链路层，属交换网络（主要进行MAC地址识别）。
2.课题研究的目的意义
过去，OLT（局端）中二层报文转发模块一般采用哈希查找的方式，实现地址学习的关键字与表项存储地址的映射关系，每次通过KEY值（KEY值由MAC+VLAN组成）查找表时，通过哈希函数得到表项存储位置，实现关键字的快速学习。然而，哈希是一种多对一的变换，不可避免地会出现多个关键字对应同一个存储地址的情况，从而造成哈希冲突。而解决哈希冲突，通常采用的是TCAM（三态内容寻址存储器）和哈希桶两种方法。TCAM通过存储哈希表的冲突元素来解决哈希冲突，此时硬件需要外挂TCAM并且要添加相应的寻址接口，而且在冲突剧烈时，信息集中在TCAM中，造成了哈希表存储资源的浪费。此外考虑到大容量TCAM价格昂贵、功耗高等缺点，一般不推荐该方法,较常见的做法是在同一哈希值下建立哈希桶。而传统哈希桶通过唯一的哈希地址获取整个学习表的资源。此时，该哈希地址对应的记录条目被完全占用，而表项的其他地址空间仍然处于空闲状态。
OLT（局端，用于控制onu等光网络单元）中的主备单板需要同步表项（主要指mac地址），由于OLT为PON网络的局端设备，下一级连接着很多的ONU，一旦主单板由于负载过大或者其他原因出现损坏，无法正常控制ONU，在不影响业务的情况下，需要备用单板立即切换。而二层中的表项同步是报文转发中关键的一步，由于原有同步机制仅通过在内存中维护一个软表，比较软表与局域网交换机中实际L2硬表，来得知上一次检查与本次检查L2表项发生的变化，通过RDP消息（一种板间消息传输机制）将这一变化告知备板，让备板作出相应的操作。原有同步机制速度慢，效率低，对上层业务（主要造成时延过大）有一定影响。
出于以上目的，对二层MAC学习转发系统进行优化设计，具有很大的工程实用意义。本课题在低成本，低时耗的条件下，进行MAC学习模块的哈希桶优化设计。当报文变化未及时同步会产生未知单播，产生大量丢包，增加时延的问题上，对MAC表项进行实时同步也是很有必要的。
本课题是基于OLT中二层表项学习转发系统进行分析设计，首先对二层MAC学习模块进行设计，实现双哈希桶加逃生桶来处理引起哈希冲突的地址信息，降低哈希冲突对网络交换性能的影响。利用双哈希算法解决地址空间利用不够充分的问题。然后对表项同步模块进行优化设计，对软表进行优化，调整RDP消息结构。最后，对报文转发模块进行设计优化，利用3秒查询与中断二者结合的方式，实时更新备板中的表项信息。
3.和本课题有关的国内外研究现状分析，包括发展水平和存在的问题等:
（这部分在八月撰写，目前看的文献量不够，还无法详细总结出现状分析）
4.研究目标、研究内容和拟解决的关键问题
4.1研究目标	
本课题针对OLT在处理大量MAC变化的场景下，在MAC学习新地址的过程中，由于哈希桶数量不够，会产生哈希冲突，导致地址学习失败的问题，同时，OLT中主备单板需要表项同步，L2中原有表项同步机制速度慢，效率低，对上层业务有一定影响。针对以上问题，对L2中的二层MAC学习模块，以及表项同步模块进行优化设计，同时阻止未知单播产生，在少量MAC变化场景下实现零丢包，大幅降低时延。
4.2研究内容	
本课题的主要研究内容如下：
（1）本系统需要设计二层MAC学习模块，采用双哈希桶加逃生桶（原有的处理机制采用的为双哈希桶，这个改进加了一个逃生桶来进行扩容）来处理引起哈希冲突的地址信息，降低哈希冲突对网络交换性能的影响。利用双哈希算法（原有哈希算法比较单一，无法处理大量MAC变化，改进后对一个MAC地址采用两种算法，分别存储在不同哈希桶）解决该哈希地址对应的记录条目被完全占用，而表项的其他空间仍然处于空闲状态，即地址空间利用不够充分的问题。

（2）本系统需要设计表项同步模块，对软表进行优化，调整RDP消息结构（RDP消息机制为板间消息传输机制，这里的改进是进行底层代码层面的改进，增加一个结构体），原有RDP发送为每次携带1条表项，优化后更新为携带20条表项，提高发送效率，相对于原有机制，时间将缩短约为原来1/20
（3）本系统需要设计报文转发模块，将遍历一次表项时间设置为最小3s，然后利用3秒查询与中断二者结合的方式，（遍历一次表项的时间通常设置为3s，但这个时间无法充分利用，于是增加中断机制，在芯片的逻辑以及软件中断上进行改进，实现当主板MAC变化，则产生中断通过RDP将变化传递给备板，实现实时同步）当主板表项发生变化，则产生FIFO DMA中断，处理表项变化信息，通过RDP将对应消息传递到备板SCU，进行单播，组播，广播报文转发。
4.3 拟解决的关键问题
（1）	当MAC表项较大时，原有存储机制会产生MAC地址学习失败的问题。 
（主要处理ONU请求突然增大，MAC地址学习不到的问题）
（2）	MAC地址学习过程中，报文学习到哈希桶1后该哈希桶满，而其他哈希空间仍然处于空闲状态的问题。
（主要处理双哈希桶分布不均的问题）
（3）	对于大量表项变化的场景，表项同步机制耗时远远大于3s，主要瓶颈在于RDP消息，通过实际测量，在linux下，发送一条消息耗时约为4ms，因此在出现N条表项变化时，其发送RDP消息就需耗时N*4 ms。
（主要处理原有RDP消息每次执行只传递一个表项，改进后可以传递20个）
（4）	在报文转发的过程中，由于原有主备板同步机制，无法实时更新表项信息，导致备板SCU当报文为未知单播，对其限速，丢包验证。
（主要防止未知单播的产生，不产生丢包）
5.拟采取的研究方法、技术路线
5.1 拟采用的研究方法
拟采用理论知识结合实际项目，根据公司现有测试平台，进行系统验证。
5.2技术路线
1.拟采用双哈希桶加逃生桶的存储机制
报文MAC地址进行哈希查表，并将新学习到的MAC地址填入哈希桶中，当发生哈希冲突时，逻辑会读取哈希桶中学习到的MAC地址个数。原有双哈希桶只能存储8条表项信息，当新学到的MAC地址对应的哈希索引的表项被占满后，会发生了哈希冲突，所以准备增加逃生桶来存储多余表项。
2.拟采用双哈希算法处理不同报文
在逻辑设计中，哈希算法被广泛应用于逻辑表项的读写操作中。每个逻辑都会根据自己特定的需求，设计出自己的哈希算法。因此，对上述双哈希桶加逃生桶采用双哈希算法处理，即HASH0算法和HASH1算法，使得当报文A学习到哈希桶1后该哈希桶满，则报文B还可以学习到哈希桶2中。 
3.拟修改RDP发送消息结构提高发送效率
RDP，全称为Reliable Datagram Protocol，它可以提供简单可靠的数据流投递服务。L2的表项同步信息是通过RDP消息进行板间可靠的消息同步。原有RDP消息每次携带一条表项，同步时间较长。拟更新RDP的消息结构，实现每次更新20条表项，相对原有机制，时间将缩短约原来的1/20。
4.拟在L2表项发生变化时，采用3秒查询与中断结合的方式实现同步更新
L2_MOD_FIFO机制是允许一个便利的用硬表改变和更新的方式通知主处理器入口的深处。该机制能够通过硬件快速得知表项变化，当表项发生变化时，L2 MOD FIFO便会得到一条变化的表项，并能获知具体发生了什么变化。拟在内存中分配了足够深度的空间， 当表项发生更新时，FIFO会产生中断，然后表项更新的信息通过DMA（直接内存读取）送至内存中。 
6.结果验证
6.1.验证双哈希桶加逃生桶
由于原有哈希桶只能存储16个相同表项，当有17个相同表项同时存储时会发生地址学习失败，当增加逃生桶后可以存储24个相同表项，并在性能上有所提升。
6.2.验证双哈希算法的有效性
由于原有哈希算法，无法均匀分配哈希桶，导致有哈希桶空余的问题。这个验证可能会同6.1结合在一起，做结果展示。（我把这两个写在了一个模块中）
6.3.验证RDP消息的有效性
当冲入20000条可变MAC，通过添加标志计时，测出原有同步时间约为80秒，优化消息结构后，同步时间约为5秒。
6.4验证3秒查询与中断结合的方式的有效性
原有机制同步一轮耗时3秒，因此平均同步时间约为1.5秒，主要通过构造单播ARP报文测试结果，通过测试数据进行对比展示，原有机制会有大量丢包，改进后可以实现零丢包，测试数据已经存在。



